DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property name
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=slug, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property slug with lazy=false
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for slug
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property slug
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=started_date, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property startedDate with lazy=false
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for startedDate
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property startedDate
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=version, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property version with lazy=false
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for version
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property version
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for id
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for description
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for endedDate
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for slug
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for startedDate
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Setting SimpleValue typeName for version
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
INFO main org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
DEBUG main org.springframework.jdbc.datasource.SimpleDriverDataSource - Creating new JDBC Driver Connection to [jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1]
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Database ->
       name : H2
    version : 1.3.171 (2013-03-17)
      major : 1
      minor : 3
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Driver ->
       name : H2 JDBC Driver
    version : 1.3.171 (2013-03-17)
      major : 1
      minor : 3
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - JDBC version : 4.0
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.SettingsFactory - Connection release mode: auto
INFO main org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
DEBUG main org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
INFO main org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
DEBUG main org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Query cache: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG main org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
DEBUG main org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Statistics: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.SettingsFactory - Named query checking : enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\jdk7\jre\bin, java.vm.version=23.21-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=E:\MyWorks\hantsy-labs\conference\snippets\jpa, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_21-b11, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=D:\jdk7\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=true, java.io.tmpdir=E:\Users\hantsy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=D:\jdk7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Common Files\Acronis\SnapAPI\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Git\bin;C:\Program Files\nodejs\;C:\Program Files\TortoiseGit\bin;C:\Program Files\TortoiseHg\;D:\Ruby193\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\Common Files\Acronis\SnapAPI\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Git\bin;C:\Program Files\nodejs\;C:\Program Files\TortoiseGit\bin;C:\Program Files\TortoiseHg\;D:\build\maven\bin;D:\jdk7\bin;D:\build\ant\bin;D:\build\gradle\bin;D:\libs\forge\bin;D:\scala\bin;D:\libs\roo\bin;D:\build\sbt;D:\play;E:\Users\hantsy\AppData\Roaming\npm\;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@62345ce0, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=E:\Users\hantsy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=hantsy, java.class.path=E:\MyWorks\hantsy-labs\conference\snippets\jpa\target\test-classes;E:\MyWorks\hantsy-labs\conference\snippets\jpa\target\classes;E:\Users\hantsy\.m2\repository\junit\junit\4.10\junit-4.10.jar;E:\Users\hantsy\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;E:\Users\hantsy\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;E:\Users\hantsy\.m2\repository\org\slf4j\slf4j-api\1.7.2\slf4j-api-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.2\jcl-over-slf4j-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\slf4j\slf4j-log4j12\1.7.2\slf4j-log4j12-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;E:\Users\hantsy\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;E:\Users\hantsy\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;E:\Users\hantsy\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-core\3.2.2.RELEASE\spring-core-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-test\3.2.2.RELEASE\spring-test-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-context\3.2.2.RELEASE\spring-context-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-expression\3.2.2.RELEASE\spring-expression-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-beans\3.2.2.RELEASE\spring-beans-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-context-support\3.2.2.RELEASE\spring-context-support-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-aop\3.2.2.RELEASE\spring-aop-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-aspects\3.2.2.RELEASE\spring-aspects-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\com\h2database\h2\1.3.171\h2-1.3.171.jar;E:\Users\hantsy\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;E:\Users\hantsy\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;E:\Users\hantsy\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;E:\Users\hantsy\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;E:\Users\hantsy\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;E:\Users\hantsy\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;E:\Users\hantsy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;E:\Users\hantsy\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.9.Final\hibernate-entitymanager-4.1.9.Final.jar;E:\Users\hantsy\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;E:\Users\hantsy\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Users\hantsy\.m2\repository\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;E:\Users\hantsy\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;E:\Users\hantsy\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-jdbc\3.2.2.RELEASE\spring-jdbc-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-tx\3.2.2.RELEASE\spring-tx-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-orm\3.2.2.RELEASE\spring-orm-3.2.2.RELEASE.jar;E:\Users\hantsy\.m2\repository\commons-pool\commons-pool\1.5.6\commons-pool-1.5.6.jar;E:\Users\hantsy\.m2\repository\commons-dbcp\commons-dbcp\1.3\commons-dbcp-1.3.jar;E:\Users\hantsy\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;E:\Users\hantsy\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;E:\Users\hantsy\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;E:\Users\hantsy\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;/D:/devtools/springsource/sts-3.2.0.RELEASE/configuration/org.eclipse.osgi/bundles/400/1/.cp/;/D:/devtools/springsource/sts-3.2.0.RELEASE/configuration/org.eclipse.osgi/bundles/399/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=D:\jdk7\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 54745 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_21, hibernate.transaction.flush_before_completion=false, java.ext.dirs=D:\jdk7\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\jdk7\jre\lib\resources.jar;D:\jdk7\jre\lib\rt.jar;D:\jdk7\jre\lib\sunrsasign.jar;D:\jdk7\jre\lib\jsse.jar;D:\jdk7\jre\lib\jce.jar;D:\jdk7\jre\lib\charsets.jar;D:\jdk7\jre\lib\jfr.jar;D:\jdk7\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
INFO main org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 4.3.1.Final
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG main org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG main org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG main org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG main org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.hantsylabs.example.conference.model.Conference
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select version from Conference where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select conference_.id, conference_.description as descript2_0_, conference_.ended_date as ended3_0_, conference_.name as name0_, conference_.slug as slug0_, conference_.started_date as started6_0_, conference_.version as version0_ from Conference conference_ where conference_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into Conference (description, ended_date, name, slug, started_date, version, id) values (?, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update Conference set description=?, ended_date=?, name=?, slug=?, started_date=?, version=? where id=? and version=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from Conference where id=? and version=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into Conference (id, description, ended_date, name, slug, started_date, version) values (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [NONE]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [READ]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [UPGRADE]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [UPGRADE_NOWAIT]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [FORCE]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [PESSIMISTIC_READ]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [PESSIMISTIC_WRITE]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [PESSIMISTIC_FORCE_INCREMENT]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [OPTIMISTIC]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.hantsylabs.example.conference.model.Conference [OPTIMISTIC_FORCE_INCREMENT]: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.hantsylabs.example.conference.model.Conference: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.hantsylabs.example.conference.model.Conference: select conference0_.id as id0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended3_0_0_, conference0_.name as name0_0_, conference0_.slug as slug0_0_, conference0_.started_date as started6_0_0_, conference0_.version as version0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@361b589d
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 19d3927e-99ea-49c2-8ccf-0ba6a7d23936 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql
DEBUG main org.springframework.jdbc.datasource.SimpleDriverDataSource - Creating new JDBC Driver Connection to [jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1]
DEBUG main org.hibernate.SQL - 
    drop table Conference if exists
DEBUG main org.hibernate.SQL - 
    create table Conference (
        id bigint generated by default as identity,
        description varchar(255) not null,
        ended_date timestamp not null,
        name varchar(255) not null,
        slug varchar(255) not null,
        started_date timestamp not null,
        version integer,
        primary key (id)
    )
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
DEBUG main org.hibernate.internal.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.ejb.internal.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@28f7852b
DEBUG main org.hibernate.ejb.internal.EntityManagerFactoryRegistry - Registering EntityManagerFactory: persistenceUnit 
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'entityManagerFactory'
INFO main org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@71bab54a: defining beans [dataSource,entityManagerFactory,transactionManager,jpaConferenceDaoImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaConferenceDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'jpaConferenceDaoImpl'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.hantsylabs.example.conference.jpa.JpaConferenceDaoImpl]: PersistenceElement for private javax.persistence.EntityManager com.hantsylabs.example.conference.jpa.JpaConferenceDaoImpl.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'jpaConferenceDaoImpl' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'jpaConferenceDaoImpl': PersistenceElement for private javax.persistence.EntityManager com.hantsylabs.example.conference.jpa.JpaConferenceDaoImpl.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'jpaConferenceDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.context.support.GenericApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@8961606]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest': PersistenceElement for javax.persistence.EntityManager com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest': AutowiredFieldElement for com.hantsylabs.example.conference.dao.ConferenceDao com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.conferenceDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaConferenceDaoImpl'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest' to bean named 'jpaConferenceDaoImpl'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'retrieveConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@5cd99967, testMethod = retrieveConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [class com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3bc1c4a4 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [retrieveConference]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@278825a3] for JPA transaction
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.springframework.jdbc.datasource.SimpleDriverDataSource - Creating new JDBC Driver Connection to [jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1]
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@278825a3] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19cf381c] does not support JDBC Connection retrieval
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@5cd99967, testMethod = retrieveConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Began transaction (1): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@699743b3]; rollback [true]
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'beforeTestCase' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.beforeTestCase] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - ===================before test=====================
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Sun Jun 09 23:28:25 CST 2013,endedDate=Sun Jun 16 23:28:25 CST 2013,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 1
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'retrieveConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.retrieveConference] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Sun Jun 09 23:28:25 CST 2013,endedDate=Sun Jun 16 23:28:25 CST 2013,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 2
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=2, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=1, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - id @=2
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from com.hantsylabs.example.conference.model.Conference where slug=:slug
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  |  \-[IDENT] Node: 'hantsylabs'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'conference'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Conference'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'slug'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'slug'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.hantsylabs.example.conference.model.Conference (<no alias>) -> conference0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : slug -> org.hibernate.type.StringType@335b3e8c
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.slug -> conference0_.slug
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} Conference conference0_ ) ( where ( = ( conference0_.slug {synthetic-alias} slug ) ? ) ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Conference conference0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Conference)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'conference0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.conference.model.Conference}}}
    |  \-[SQL_TOKEN] SqlFragment: 'conference0_.description as descript2_0_, conference0_.ended_date as ended3_0_, conference0_.name as name0_, conference0_.slug as slug0_, conference0_.started_date as started6_0_, conference0_.version as version0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[conference0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Conference conference0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.conference.model.Conference}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'conference0_.slug' {propertyName=slug,dereferenceType=ALL,propertyPath=slug,path={synthetic-alias}.slug,tableAlias=conference0_,className=com.hantsylabs.example.conference.model.Conference,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'slug' {originalText=slug}
          \-[NAMED_PARAM] ParameterNode: '?' {name=slug, expectedType=org.hibernate.type.StringType@335b3e8c}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from com.hantsylabs.example.conference.model.Conference where slug=:slug
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select conference0_.id as id0_, conference0_.description as descript2_0_, conference0_.ended_date as ended3_0_, conference0_.name as name0_, conference0_.slug as slug0_, conference0_.started_date as started6_0_, conference0_.version as version0_ from Conference conference0_ where conference0_.slug=?
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=2, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=1, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended3_0_,
        conference0_.name as name0_,
        conference0_.slug as slug0_,
        conference0_.started_date as started6_0_,
        conference0_.version as version0_ 
    from
        Conference conference0_ 
    where
        conference0_.slug=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.conference.model.Conference#1]
DEBUG main org.hibernate.loader.Loader - Result set row: 1
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.conference.model.Conference#2]
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=2, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=1, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended3_0_,
        conference0_.name as name0_,
        conference0_.slug as slug0_,
        conference0_.started_date as started6_0_,
        conference0_.version as version0_ 
    from
        Conference conference0_ 
    where
        conference0_.slug=?
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'afterTestCase' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.afterTestCase] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - ===================after test=====================
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from com.hantsylabs.example.conference.model.Conference
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'com'
                |  |  |  |  \-[IDENT] Node: 'hantsylabs'
                |  |  |  \-[IDENT] Node: 'example'
                |  |  \-[IDENT] Node: 'conference'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Conference'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.hantsylabs.example.conference.model.Conference (<no alias>) -> conference0_
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} Conference conference0_ ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Conference conference0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Conference)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'conference0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.conference.model.Conference}}}
    |  \-[SQL_TOKEN] SqlFragment: 'conference0_.description as descript2_0_, conference0_.ended_date as ended3_0_, conference0_.name as name0_, conference0_.slug as slug0_, conference0_.started_date as started6_0_, conference0_.version as version0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[conference0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Conference conference0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.conference.model.Conference}}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from com.hantsylabs.example.conference.model.Conference
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select conference0_.id as id0_, conference0_.description as descript2_0_, conference0_.ended_date as ended3_0_, conference0_.name as name0_, conference0_.slug as slug0_, conference0_.started_date as started6_0_, conference0_.version as version0_ from Conference conference0_
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=2, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=1, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended3_0_,
        conference0_.name as name0_,
        conference0_.slug as slug0_,
        conference0_.started_date as started6_0_,
        conference0_.version as version0_ 
    from
        Conference conference0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.conference.model.Conference#1]
DEBUG main org.hibernate.loader.Loader - Result set row: 1
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.conference.model.Conference#2]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@5cd99967, testMethod = retrieveConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@278825a3]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - rolling back
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - rolled JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@278825a3] after transaction
DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Rolled back transaction after test execution for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@5cd99967, testMethod = retrieveConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [[TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@5cd99967, testMethod = retrieveConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest]
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@635bc5cc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest': PersistenceElement for javax.persistence.EntityManager com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest': AutowiredFieldElement for com.hantsylabs.example.conference.dao.ConferenceDao com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.conferenceDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaConferenceDaoImpl'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'updateConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@635bc5cc, testMethod = updateConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [updateConference]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1e17070a] for JPA transaction
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.springframework.jdbc.datasource.SimpleDriverDataSource - Creating new JDBC Driver Connection to [jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1]
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1e17070a] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19cf381c] does not support JDBC Connection retrieval
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@635bc5cc, testMethod = updateConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Began transaction (2): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@699743b3]; rollback [true]
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.beforeTestCase] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - ===================before test=====================
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Sun Jun 09 23:28:25 CST 2013,endedDate=Sun Jun 16 23:28:25 CST 2013,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 3
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'updateConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.updateConference] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Sun Jun 09 23:28:25 CST 2013,endedDate=Sun Jun 16 23:28:25 CST 2013,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 4
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=4, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=3, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - id @=4
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=4, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013Boston, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=3, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    update
        Conference 
    set
        description=?,
        ended_date=?,
        name=?,
        slug=?,
        started_date=?,
        version=? 
    where
        id=? 
        and version=?
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.afterTestCase] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - ===================after test=====================
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=4, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013Boston, slug=jud-2013, version=1}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=3, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended3_0_,
        conference0_.name as name0_,
        conference0_.slug as slug0_,
        conference0_.started_date as started6_0_,
        conference0_.version as version0_ 
    from
        Conference conference0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.conference.model.Conference#3]
DEBUG main org.hibernate.loader.Loader - Result set row: 1
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.conference.model.Conference#4]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@635bc5cc, testMethod = updateConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1e17070a]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - rolling back
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - rolled JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1e17070a] after transaction
DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Rolled back transaction after test execution for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@635bc5cc, testMethod = updateConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [[TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@635bc5cc, testMethod = updateConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest]
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@756481cf, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest': PersistenceElement for javax.persistence.EntityManager com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest': AutowiredFieldElement for com.hantsylabs.example.conference.dao.ConferenceDao com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.conferenceDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jpaConferenceDaoImpl'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'deleteConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@756481cf, testMethod = deleteConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [deleteConference]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1986793f] for JPA transaction
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.springframework.jdbc.datasource.SimpleDriverDataSource - Creating new JDBC Driver Connection to [jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1]
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1986793f] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19cf381c] does not support JDBC Connection retrieval
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@756481cf, testMethod = deleteConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Began transaction (3): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@699743b3]; rollback [true]
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.beforeTestCase] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - ===================before test=====================
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Sun Jun 09 23:28:25 CST 2013,endedDate=Sun Jun 16 23:28:25 CST 2013,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 5
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'deleteConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.deleteConference] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Sun Jun 09 23:28:25 CST 2013,endedDate=Sun Jun 16 23:28:25 CST 2013,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 6
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=5, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=6, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - id @=6
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=5, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=6, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        Conference 
    where
        id=? 
        and version=?
DEBUG main org.hibernate.loader.Loader - Loading entity: [com.hantsylabs.example.conference.model.Conference#6]
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id0_0_,
        conference0_.description as descript2_0_0_,
        conference0_.ended_date as ended3_0_0_,
        conference0_.name as name0_0_,
        conference0_.slug as slug0_0_,
        conference0_.started_date as started6_0_0_,
        conference0_.version as version0_0_ 
    from
        Conference conference0_ 
    where
        conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Done entity load
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - conference@null
DEBUG main org.springframework.transaction.aspectj.AnnotationTransactionAspect - Skipping transactional joinpoint [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest.afterTestCase] because no transaction manager has been configured
DEBUG main com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest - ===================after test=====================
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.conference.model.Conference{id=5, endedDate=Sun Jun 16 23:28:25 CST 2013, startedDate=Sun Jun 09 23:28:25 CST 2013, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended3_0_,
        conference0_.name as name0_,
        conference0_.slug as slug0_,
        conference0_.started_date as started6_0_,
        conference0_.version as version0_ 
    from
        Conference conference0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.conference.model.Conference#5]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@756481cf, testMethod = deleteConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1986793f]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - rolling back
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - rolled JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1986793f] after transaction
DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Rolled back transaction after test execution for test context [TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@756481cf, testMethod = deleteConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [[TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest@756481cf, testMethod = deleteConference@JpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test class: context [[TestContext@1151000a testClass = JpaConferenceDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@51e668d0 testClass = JpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/conference/config/applicationContext-jpa.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
INFO Thread-2 org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1268c278: startup date [Fri May 10 23:28:21 CST 2013]; root of context hierarchy
DEBUG Thread-2 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
INFO Thread-2 org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@71bab54a: defining beans [dataSource,entityManagerFactory,transactionManager,jpaConferenceDaoImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
DEBUG Thread-2 org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean 'jpaConferenceDaoImpl': [com.hantsylabs.example.conference.dao.JpaConferenceDaoImplTest]
DEBUG Thread-2 org.springframework.beans.factory.support.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory'
INFO Thread-2 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'persistenceUnit'
DEBUG Thread-2 org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
DEBUG Thread-2 org.hibernate.ejb.internal.EntityManagerFactoryRegistry - Remove: name=persistenceUnit
DEBUG Thread-2 org.springframework.beans.factory.support.DisposableBeanAdapter - Invoking destroy() on bean with name 'dataSource'
DEBUG Thread-2 org.springframework.jdbc.datasource.SimpleDriverDataSource - Creating new JDBC Driver Connection to [jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1]
