// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hantsylabs.example.spring.conference.web;

import com.hantsylabs.example.spring.conference.model.Conference;
import com.hantsylabs.example.spring.conference.model.Signup;
import com.hantsylabs.example.spring.conference.service.ConferenceService;
import com.hantsylabs.example.spring.conference.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    ConferenceService ApplicationConversionServiceFactoryBean.conferenceService;
    
    public Converter<Conference, String> ApplicationConversionServiceFactoryBean.getConferenceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.hantsylabs.example.spring.conference.model.Conference, java.lang.String>() {
            public String convert(Conference conference) {
                return new StringBuilder().append(conference.getName()).append(' ').append(conference.getDescription()).append(' ').append(conference.getEndedDate()).append(' ').append(conference.getSlug()).toString();
            }
        };
    }
    
    public Converter<Long, Conference> ApplicationConversionServiceFactoryBean.getIdToConferenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.hantsylabs.example.spring.conference.model.Conference>() {
            public com.hantsylabs.example.spring.conference.model.Conference convert(java.lang.Long id) {
                return conferenceService.findConference(id);
            }
        };
    }
    
    public Converter<String, Conference> ApplicationConversionServiceFactoryBean.getStringToConferenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.hantsylabs.example.spring.conference.model.Conference>() {
            public com.hantsylabs.example.spring.conference.model.Conference convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Conference.class);
            }
        };
    }
    
    public Converter<Signup, String> ApplicationConversionServiceFactoryBean.getSignupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.hantsylabs.example.spring.conference.model.Signup, java.lang.String>() {
            public String convert(Signup signup) {
                return new StringBuilder().append(signup.getFirstName()).append(' ').append(signup.getLastName()).append(' ').append(signup.getEmail()).append(' ').append(signup.getPhone()).toString();
            }
        };
    }
    
    public Converter<Long, Signup> ApplicationConversionServiceFactoryBean.getIdToSignupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.hantsylabs.example.spring.conference.model.Signup>() {
            public com.hantsylabs.example.spring.conference.model.Signup convert(java.lang.Long id) {
                return Signup.findSignup(id);
            }
        };
    }
    
    public Converter<String, Signup> ApplicationConversionServiceFactoryBean.getStringToSignupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.hantsylabs.example.spring.conference.model.Signup>() {
            public com.hantsylabs.example.spring.conference.model.Signup convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Signup.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getConferenceToStringConverter());
        registry.addConverter(getIdToConferenceConverter());
        registry.addConverter(getStringToConferenceConverter());
        registry.addConverter(getSignupToStringConverter());
        registry.addConverter(getIdToSignupConverter());
        registry.addConverter(getStringToSignupConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
